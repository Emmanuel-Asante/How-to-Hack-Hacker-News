-- Examine the table
SELECT *
FROM hacker_news
LIMIT 5;

-- Find most popular Hacker News
SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

-- Find the total scire fo all the stories
SELECT SUM(score)
FROM hacker_news;

-- Users with scores of more than 200
SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) > 200
ORDER BY 2 DESC;

-- Calculate percentage
SELECT (517 + 309 + 304 + 282) / 6366.0;

-- Number of times offending url is posted
SELECT user,
  COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY 1
ORDER BY 2 DESC;

-- Sites that feed Hacker News the most
SELECT CASE
    WHEN url LIKE '%github.com%' THEN 'GitHub'
    WHEN url LIKE '%medium.com%' THEN 'Medium'
    WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
    ELSE 'Other'
  END AS 'Source'
FROM hacker_news;

-- Sites the feef Hacker News
SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
   ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;

-- Examine the timestamp column
SELECT timestamp
FROM hacker_news
LIMIT 10;

-- Return the Hours of the timestamp column
SELECT timestamp,
   strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;

-- Return the hours of the timestamp, the average score and the count of stories for each hour
SELECT strftime('%H', timestamp) AS 'Hour', 
   ROUND(AVG(score), 1) AS 'Average Score', 
   COUNT(*) AS 'Number of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 1;